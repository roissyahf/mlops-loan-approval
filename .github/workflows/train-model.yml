name: Train Model (Manual)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * 1"  # weekly run (Mon 18:00 UTC) >> optional

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r model/requirements.txt
          pip install "dvc[http]" mlflow python-dotenv joblib

      - name: Configure DagsHub (MLflow + DVC)
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
        run: |
          echo "MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_USERNAME=${DAGSHUB_USERNAME}" >> $GITHUB_ENV
          echo "MLFLOW_TRACKING_PASSWORD=${DAGSHUB_TOKEN}" >> $GITHUB_ENV

          dvc remote modify dagshub auth basic
          dvc remote modify dagshub user "$DAGSHUB_USERNAME"
          dvc remote modify dagshub --local password "$DAGSHUB_TOKEN"

      - name: Pull training data & previous artifacts
        run: dvc pull

      - name: Reproduce training stage
        run: dvc repro -v

      - name: Guard rails (ensure model exists and is non-empty)
        run: |
          test -f model/model.pkl || (echo "model.pkl not found" && exit 1)
          test -s model/model.pkl || (echo "model.pkl is empty" && exit 1)

      - name: Smoke test (load model and check predictability)
        run: |
          python - << 'PY'
          import joblib, sys
          try:
              m = joblib.load("model/model.pkl")
          except Exception as e:
              print("Failed to load model:", e)
              sys.exit(1)
          # Minimal contract: must have predict method
          if not hasattr(m, "predict"):
              print("Model has no predict() method")
              sys.exit(1)
          print("Model loaded OK:", type(m).__name__)
          PY

      - name: Push updated artifacts
        run: dvc push
