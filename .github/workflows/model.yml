name: CI/CD - Model

on:
  push:
    paths: ['model/**', '.github/workflows/model.yml']
  workflow_call: {}

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION:     ${{ secrets.GCP_REGION }}
  REPO:       ${{ secrets.ARTIFACT_REPO }}
  SVC:        loan-model
  IMAGE:      ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/loan-model:latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions: { contents: read, id-token: write }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build and push model image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.model
          push: true
          tags: ${{ env.IMAGE }}

      - name: Deploy Cloud Run (Model, private)
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SVC }}
          image: ${{ env.IMAGE }}
          region: ${{ env.REGION }}
          flags: >
            --ingress=all
            --no-allow-unauthenticated
            --min-instances=1
            --concurrency=20
            --cpu=1 --memory=512Mi
            --service-account=sa-model@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
            --timeout=300
            --set-env-vars=MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}
            --set-env-vars=MLFLOW_TRACKING_USERNAME=${{ secrets.DAGSHUB_USERNAME }}
            --set-env-vars=MLFLOW_TRACKING_PASSWORD=${{ secrets.DAGSHUB_TOKEN }}
            --set-env-vars=MLFLOW_EXPERIMENT_NAME=MLOps-Loan-Approval
            --set-env-vars=MLFLOW_MODEL_NAME=XGB-best-model-manual
            --set-env-vars=MLFLOW_MODEL_STAGE=Production
            --set-env-vars=MODEL_PATH=/app/model.pkl
            --set-env-vars=PYTHONUNBUFFERED=1

      - name: Output MODEL_URL
        id: model
        run: |
          URL=$(gcloud run services describe ${{ env.SVC }} --region ${{ env.REGION }} --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
